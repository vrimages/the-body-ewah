let myVideo;
let pastPixels = [];
let threshSlider;

function setup() {
  createCanvas(640, 480);
  
  myVideo = createCapture(VIDEO);
  myVideo.size(width, height);
  myVideo.hide();
  
  threshSlider = createSlider(0,255, 100);
}

function draw() {
  
  myVideo.loadPixels();
  
  const currentPixels = myVideo.pixels;
  let threshValue = threshSlider.value();
  
  for(let y = 0; y< height; y++){
    for(let x = 0; x < width; x++){
      const i = (y*width+x)*4;
  
  
      const rDiff = abs(currentPixels[i+0] - pastPixels[i+0]);
      const gDiff = abs(currentPixels[i+1] - pastPixels[i+1]);
      const bDiff = abs(currentPixels[i+2] - pastPixels[i+2]);
                        
                        
      // set past pixels to current pixels
      pastPixels[i+0] = currentPixels[i+0];
      pastPixels[i+1] = currentPixels[i+1];
      pastPixels[i+2] = currentPixels[i+2];
      pastPixels[i+3] = currentPixels[i+3];
      
      avgDiff = (rDiff + gDiff + bDiff)/3; // 0-22
      
      
      // if the difference between frames is less than the threshold value
      if (avgDiff >= 80 && avgDiff < 120) {
        // turn the current pixel black
        currentPixels[i + 0] = 0;
        currentPixels[i + 1] = 0;
        currentPixels[i + 2] = 255;
        
        
      } else if (avgDiff >= 10 && avgDiff < 80) {
        // otherwise, turn it a soft red
        currentPixels[i + 0] = 255; // to show the natural video color
        currentPixels[i + 1] = 0; // comment out
        currentPixels[i + 2] = 0; // these three lines
        // an alpha of 100, which creates some nice smoothing
        currentPixels[i + 3] = 100;
      } else if (avgDiff < 10 & avgDiff > 0) {
        currentPixels[i + 0] = 0; // to show the natural video color
        currentPixels[i + 1] = 0; // comment out
        currentPixels[i + 2] = 0; // these three lines
        
      }





        }
  }
      
  myVideo.updatePixels();
  image(myVideo,0,0,width,height);
        
        }